{"version":3,"sources":["components/UI/SearchAppBar.tsx","configs/config.ts","api/MoviesAPI.ts","utils/MovieUtils.ts","components/MovieDetails/MovieDetails.tsx","components/MovieCard/MovieCard.tsx","definitions/tempMovie.ts","components/Movies/Movies.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["withStyles","theme","createStyles","root","width","grow","flexGrow","menuButton","marginLeft","marginRight","title","Object","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","props","classes","react_default","a","createElement","className","AppBar_default","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","noWrap","Search_default","InputBase_default","placeholder","input","MovieDB","Urls","ServiceHelper","url","concat","res","status","Error","json","MoviesAPI","discoverMovies","_callee","regenerator_default","wrap","_context","prev","next","fetch","then","data","results","abrupt","sent","stop","_callee2","query","_context2","MovieUtils","makePosterUrl","makeBackdropUrl","MovieDetails","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","render","react","Paper_default","component","item","Divider_default","src","poster_path","vote_average","release_date","overview","backdrop_path","alt","state","React","MovieCard","makeImageUrl","handleOpen","setState","modalOpen","handleClose","Card_default","onClick","CardActionArea_default","CardMedia_default","image","CardContent_default","gutterBottom","Modal_default","aria-labelledby","aria-describedby","open","onClose","components_MovieDetails_MovieDetails","tempMovie","vote_count","id","video","popularity","original_language","original_title","genre_ids","adult","Movies","discover","console","warn","items","componentWillMount","map","components_MovieCard_MovieCard","App","UI_SearchAppBar","components_Movies_Movies","Boolean","window","location","hostname","match","ReactDOM","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7dd9fa18.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = (theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\twidth: '100%',\n\t\t},\n\t\tgrow: {\n\t\t\tflexGrow: 1,\n\t\t},\n\t\tmenuButton: {\n\t\t\tmarginLeft: -12,\n\t\t\tmarginRight: 20,\n\t\t},\n\t\ttitle: {\n\t\t\tdisplay: 'none',\n\t\t\t[theme.breakpoints.up('sm')]: {\n\t\t\t\tdisplay: 'block',\n\t\t\t},\n\t\t},\n\t\tsearch: {\n\t\t\tposition: 'relative',\n\t\t\tborderRadius: theme.shape.borderRadius,\n\t\t\tbackgroundColor: fade(theme.palette.common.white, 0.15),\n\t\t\t'&:hover': {\n\t\t\t\tbackgroundColor: fade(theme.palette.common.white, 0.25),\n\t\t\t},\n\t\t\tmarginLeft: 0,\n\t\t\twidth: '100%',\n\t\t\t[theme.breakpoints.up('sm')]: {\n\t\t\t\tmarginLeft: theme.spacing.unit,\n\t\t\t\twidth: 'auto',\n\t\t\t},\n\t\t},\n\t\tsearchIcon: {\n\t\t\twidth: theme.spacing.unit * 9,\n\t\t\theight: '100%',\n\t\t\tposition: 'absolute',\n\t\t\tpointerEvents: 'none',\n\t\t\tdisplay: 'flex',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center',\n\t\t},\n\t\tinputRoot: {\n\t\t\tcolor: 'inherit',\n\t\t\twidth: '100%',\n\t\t},\n\t\tinputInput: {\n\t\t\tpaddingTop: theme.spacing.unit,\n\t\t\tpaddingRight: theme.spacing.unit,\n\t\t\tpaddingBottom: theme.spacing.unit,\n\t\t\tpaddingLeft: theme.spacing.unit * 10,\n\t\t\ttransition: theme.transitions.create('width'),\n\t\t\twidth: '100%',\n\t\t\t[theme.breakpoints.up('sm')]: {\n\t\t\t\twidth: 120,\n\t\t\t\t'&:focus': {\n\t\t\t\t\twidth: 200,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\nexport interface Props extends WithStyles<typeof styles> {}\n\nconst searchHandler = () => {\n\n}\n\nconst SearchAppBar = (props: Props) => {\n\n\tconst { classes } = props;\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n\t\t\t\t\t\tMovies API Demo\n          \t\t\t</Typography>\n\t\t\t\t\t<div className={classes.grow} />\n\t\t\t\t\t<div className={classes.search}>\n\t\t\t\t\t\t<div className={classes.searchIcon}>\n\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<InputBase\n\t\t\t\t\t\t\tplaceholder=\"Search…\"\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\troot: classes.inputRoot,\n\t\t\t\t\t\t\t\tinput: classes.inputInput,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n}\n\nSearchAppBar.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n} as any;\n\nexport default withStyles(styles)(SearchAppBar);","export const MovieDB = {\n\tapiKey: \"ec100598eff80eb95917837627303bb3\",\n\ttoken: \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlYzEwMDU5OGVmZjgwZWI5NTkxNzgzNzYyNzMwM2JiMyIsInN1YiI6IjViOGMyNGI3MGUwYTI2MWQ3YzAzOGI5ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9O_oi_FGYU8fftu5mgAFk9EujGRpuybYRHyAHSXswDY\",\n\tendpoint: \"https://api.themoviedb.org/3/\"\n}","import { MovieDB } from '../configs/config';\n\nconst Urls: any = {\n\tmovies: 'discover/movie',\n\tsearch: 'search/movie/?query='\n};\n\nconst ServiceHelper: any = {\n\tmakeUrl: (url: string) => `${MovieDB.endpoint}${url}?api_key=${MovieDB.apiKey}`,\n\tvalidate: (res: any) => {\n\t\tif (res.status >= 400) {\n\t\t\tthrow new Error(\"Bad response from server\");\n\t\t}\n\t\treturn res.json();\n\t}\n}\n\nexport default class MoviesAPI {\n\tpublic discoverMovies = async () => await fetch(ServiceHelper.makeUrl(Urls.movies))\n\t\t.then((res) => ServiceHelper.validate(res))\n\t\t.then((data) => data.results);\n\t\n\tpublic search = async (query: string) => await fetch(ServiceHelper.makeUrl(Urls.search + query))\n\t\t.then((res) => ServiceHelper.validate(res))\n\t\t.then((data) => data.results);\n}\n","export default class MovieUtils {\n\tmakePosterUrl = (url: string): string => {\n\t\treturn `https://image.tmdb.org/t/p/w185_and_h278_bestv2/${url}`;\n\t};\n\n\tmakeBackdropUrl = (url: string): string => {\n\t\treturn `https://image.tmdb.org/t/p/w1400_and_h450_face/${url}`;\n\t}\n}","import * as React from 'react';\nimport { IMovieDetailsState } from './IMovieDetailsState';\nimport { IMovieDetailsProps } from './IMovieDetailsProps';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport { withStyles } from '@material-ui/core/styles';\nimport MovieUtils from \"../../utils/MovieUtils\";\n\nclass MovieDetails extends React.Component<IMovieDetailsProps, IMovieDetailsState> {\n\n\tconstructor(props: IMovieDetailsProps) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tmakePosterUrl = (url: string): string => new MovieUtils().makePosterUrl(url); \n\tmakeBackdropUrl = (url: string): string => new MovieUtils().makeBackdropUrl(url); \n\n\trender = (): JSX.Element => {\n\t\treturn (\n\t\t\t<div className=\"MovieDetails\">\n\t\t\t\t<Paper className=\"MovieDetails-paper\">\n\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\" className=\"MovieDetails-title\">\n\t\t\t\t\t\t<b>{this.props.item.title}</b>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<div className=\"MovieDetails-overview\">\n\t\t\t\t\t\t<div className=\"MovieDetails-overview-image\">\n\t\t\t\t\t\t\t<img src={this.makePosterUrl(this.props.item.poster_path)} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"MovieDetails-overview-description\">\n\t\t\t\t\t\t\t<Typography component=\"p\" className=\"MovieDetails-rating\">\n\t\t\t\t\t\t\t\tRating: <i>{this.props.item.vote_average}</i> \n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<Typography component=\"p\" className=\"MovieDetails-release\">\n\t\t\t\t\t\t\t\tRelease date: <b>{this.props.item.release_date}</b>\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<Typography component=\"p\" className=\"MovieDetails-overview-text\">\n\t\t\t\t\t\t\t\t{this.props.item.overview}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<div className=\"MovieDetails-backdrop\">\n\t\t\t\t\t\t<img src={this.makeBackdropUrl(this.props.item.backdrop_path)} alt=\"backdrop\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Divider />\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MovieDetails;\n","import * as React from 'react';\nimport { IMovieCardState } from './IMovieCardState';\nimport { IMovieCardProps } from './IMovieCardProps';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport MovieDetails from \"../MovieDetails/MovieDetails\";\nimport MovieUtils from \"../../utils/MovieUtils\";\n\nclass MovieCard extends React.Component<IMovieCardProps, IMovieCardState> {\n\n\tconstructor(props: IMovieCardProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmodalOpen: false\n\t\t};\n\t}\n\n\tmakeImageUrl = (url: string): string => new MovieUtils().makePosterUrl(url); \n\n\thandleOpen = () => {\n\t\tthis.setState({ modalOpen: true });\n\t};\n\n\thandleClose = () => {\n\t\tthis.setState({ modalOpen: false });\n\t};\n\n\trender = (): JSX.Element => {\n\t\treturn (\n\t\t\t<div className=\"MovieCard\">\n\t\t\t\t<Card onClick={this.handleOpen}>\n\t\t\t\t\t<CardActionArea>\n\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\tcomponent=\"img\"\n\t\t\t\t\t\t\tclassName=\"card-media-image\"\n\t\t\t\t\t\t\timage={this.makeImageUrl(this.props.item.poster_path)}\n\t\t\t\t\t\t\ttitle={this.props.item.title}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"h2\" className=\"MovieCard-title\">\n\t\t\t\t\t\t\t\t{this.props.item.title}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</CardActionArea>\n\t\t\t\t</Card>\n\t\t\t\t<Modal\n\t\t\t\t\taria-labelledby=\"simple-modal-title\"\n\t\t\t\t\taria-describedby=\"simple-modal-description\"\n\t\t\t\t\topen={this.state.modalOpen}\n\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t>\n\t\t\t\t\t<MovieDetails item={this.props.item} />\n\t\t\t\t</Modal>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MovieCard;\n","import { IMovie } from \"../interfaces/IMovie\";\n\nexport const tempMovie: IMovie = {\n\t\"vote_count\": 4845, \n\t\"id\": 299534, \n\t\"video\": false, \n\t\"vote_average\": 8.6, \n\t\"title\": \"Avengers: Endgame\", \n\t\"popularity\": 303.658, \n\t\"poster_path\": \"/or06FN3Dka5tukK1e9sl16pB3iy.jpg\", \n\t\"original_language\": \"en\", \n\t\"original_title\": \"Avengers: Endgame\", \n\t\"genre_ids\": [12, 878, 28], \n\t\"backdrop_path\": \"/7RyHsO4yDXtBv1zUU3mTpHeQ0d5.jpg\", \n\t\"adult\": false, \n\t\"overview\": \"After the devastating events of Avengers: Infinity War, the universe is in ruins due to the efforts of the Mad Titan, Thanos. With the help of remaining allies, the Avengers must assemble once more in order to undo Thanos' actions and restore order to the universe once and for all, no matter what consequences may be in store.\", \n\t\"release_date\": \"2019-04-24\"\n}","import * as React from 'react';\nimport { IMoviesState } from './IMoviesState';\nimport { IMoviesProps } from './IMoviesProps';\nimport MoviesAPI from '../../api/MoviesAPI';\nimport MovieCard from '../MovieCard/MovieCard';\nimport { tempMovie } from '../../definitions/tempMovie';\nimport { IMovie } from \"../../interfaces/IMovie\";\n\nclass Movies extends React.Component<IMoviesProps, IMoviesState> {\n\n\tconstructor(props: IMoviesProps) {\n\t\tsuper(props);\n\t\tthis.state = { items: [tempMovie] };\n\t}\n\n\tdiscover = () => {\n\t\tlet mService = new MoviesAPI();\n\t\tmService.discoverMovies().then((data: [IMovie]) => {\n\t\t\tconsole.warn(data);\n\t\t\tthis.setState({\n\t\t\t\titems: data\n\t\t\t});\n\t\t});\n\t}\n\n\tcomponentWillMount = () => this.discover();\n\n\trender = (): JSX.Element => {\n\t\treturn (\n\t\t\t<div className=\"Movies\">\n\t\t\t\t<h2>Movies</h2>\n\t\t\t\t<ul className=\"Movies-list\">\n\t\t\t\t\t{this.state.items.map( (item: IMovie) => (\n\t\t\t\t\t\t<li className=\"Movies-list_item\">\n\t\t\t\t\t\t\t<MovieCard item={item} />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Movies;\n","import React from 'react';\nimport './App.css';\n// import Button from '@material-ui/core/Button';\nimport SearchAppBar from '../../components/UI/SearchAppBar';\nimport Movies from \"../../components/Movies/Movies\";\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<SearchAppBar />\n\t\t\t<Movies />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}